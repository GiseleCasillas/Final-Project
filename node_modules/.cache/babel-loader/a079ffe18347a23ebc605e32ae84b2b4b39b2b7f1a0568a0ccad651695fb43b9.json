{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import ReviewBox from\"./ReviewBox\";import ReviewForm from\"./ReviewForm\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const ReviewPage=()=>{const[reviews,setReviews]=useState([]);const[newReview,setNewReview]=useState({author:\"\",rating:0,content:\"\"});useEffect(()=>{loadReviews();},[]);// GET request to fetch all reviews\nconst loadReviews=()=>{fetch(\"/reviews\").then(response=>{if(!response.ok){throw new Error(\"Error fetching reviews: \".concat(response.statusText));}return response.json();}).then(data=>{setReviews(data);}).catch(error=>{console.error(error.message);});};// POST request to create a new review\nconst addReview=()=>{fetch(\"/reviews\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(newReview)}).then(response=>{if(!response.ok){throw new Error(\"Error adding review: \".concat(response.statusText));}return response.json();}).then(data=>{// Update the reviews state with the new review\nsetReviews([...reviews,data]);// Clear the form fields\nsetNewReview({author:\"\",rating:0,content:\"\"});}).catch(error=>{console.error(error.message);});};// PUT request to update a specific review by ID\nconst updateReview=(id,updatedReview)=>{fetch(\"/reviews/\".concat(id),{method:\"PUT\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(updatedReview)}).then(response=>{if(!response.ok){throw new Error(\"Error updating review: \".concat(response.statusText));}return response.json();}).then(data=>{// Update the reviews state with the updated review\nsetReviews(reviews.map(review=>review.id===id?data:review));}).catch(error=>{console.error(error.message);});};// DELETE request to delete a specific review by ID\nconst deleteReview=id=>{fetch(\"/reviews/\".concat(id),{method:\"DELETE\"}).then(response=>{if(!response.ok){throw new Error(\"Error deleting review: \".concat(response.statusText));}}).then(()=>{// Update the reviews state by removing the deleted review\nsetReviews(reviews.filter(review=>review.id!==id));}).catch(error=>{console.error(error.message);});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Reviews\"}),/*#__PURE__*/_jsx(\"ul\",{children:reviews.map(review=>/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(ReviewBox,{author:review.author,rating:review.rating,content:review.content}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>updateReview(review.id,{content:\"Updated Content\"}),children:\"Update\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>deleteReview(review.id),children:\"Delete\"})]},review.id))}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Add a Review\"}),/*#__PURE__*/_jsx(ReviewForm,{addReview:addReview})]})]});};export default ReviewPage;","map":{"version":3,"names":["React","useState","useEffect","ReviewBox","ReviewForm","jsx","_jsx","jsxs","_jsxs","ReviewPage","reviews","setReviews","newReview","setNewReview","author","rating","content","loadReviews","fetch","then","response","ok","Error","concat","statusText","json","data","catch","error","console","message","addReview","method","headers","body","JSON","stringify","updateReview","id","updatedReview","map","review","deleteReview","filter","children","onClick"],"sources":["/Users/giselecasillas/my-app-v2/src/pages/ReviewPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReviewBox from \"./ReviewBox\";\nimport ReviewForm from \"./ReviewForm\";\n\nconst ReviewPage = () => {\n  const [reviews, setReviews] = useState([]);\n  const [newReview, setNewReview] = useState({\n    author: \"\",\n    rating: 0,\n    content: \"\",\n  });\n\n  useEffect(() => {\n    loadReviews();\n  }, []);\n\n  // GET request to fetch all reviews\n  const loadReviews = () => {\n    fetch(\"/reviews\")\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(`Error fetching reviews: ${response.statusText}`);\n        }\n        return response.json();\n      })\n      .then((data) => {\n        setReviews(data);\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  };\n\n  // POST request to create a new review\n  const addReview = () => {\n    fetch(\"/reviews\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newReview),\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(`Error adding review: ${response.statusText}`);\n        }\n        return response.json();\n      })\n      .then((data) => {\n        // Update the reviews state with the new review\n        setReviews([...reviews, data]);\n\n        // Clear the form fields\n        setNewReview({\n          author: \"\",\n          rating: 0,\n          content: \"\",\n        });\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  };\n\n  // PUT request to update a specific review by ID\n  const updateReview = (id, updatedReview) => {\n    fetch(`/reviews/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(updatedReview),\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(`Error updating review: ${response.statusText}`);\n        }\n        return response.json();\n      })\n      .then((data) => {\n        // Update the reviews state with the updated review\n        setReviews(reviews.map((review) => (review.id === id ? data : review)));\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  };\n\n  // DELETE request to delete a specific review by ID\n  const deleteReview = (id) => {\n    fetch(`/reviews/${id}`, {\n      method: \"DELETE\",\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(`Error deleting review: ${response.statusText}`);\n        }\n      })\n      .then(() => {\n        // Update the reviews state by removing the deleted review\n        setReviews(reviews.filter((review) => review.id !== id));\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  };\n\n  return (\n    <div>\n      <h1>Reviews</h1>\n      <ul>\n        {reviews.map((review) => (\n          <li key={review.id}>\n            <ReviewBox\n              author={review.author}\n              rating={review.rating}\n              content={review.content}\n            />\n\n            {/* Button to update a review */}\n            <button\n              onClick={() =>\n                updateReview(review.id, { content: \"Updated Content\" })\n              }\n            >\n              Update\n            </button>\n\n            {/* Button to delete a review */}\n            <button onClick={() => deleteReview(review.id)}>Delete</button>\n          </li>\n        ))}\n      </ul>\n      {/* Form to add a new review */}\n      <div>\n        <h2>Add a Review</h2>\n        <ReviewForm addReview={addReview} />\n      </div>\n    </div>\n  );\n};\n\nexport default ReviewPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"const baseUrl = process.env.REACT_APP_API_BASE_URL;\nexport function fetchReviews() {\n  return fetch(`${baseUrl}/reviews`).then(response => {\n    if (!response.ok) {\n      throw new Error(`Error fetching reviews: ${response.statusText}`);\n    }\n    return response.json();\n  });\n}\nexport function fetchReviewById(id) {\n  return fetch(`${baseUrl}/reviews/${id}`).then(response => {\n    if (!response.ok) {\n      throw new Error(`Error fetching review: ${response.statusText}`);\n    }\n    return response.json();\n  });\n}\nexport function addReview(data) {\n  return fetch(`${baseUrl}/reviews/create`, {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  }).then(response => {\n    if (!response.ok) {\n      throw new Error(`Error adding review: ${response.statusText}`);\n    }\n    return response.json();\n  });\n}\nexport function updateReview(id, data) {\n  return fetch(`${baseUrl}/reviews/update/${id}`, {\n    method: \"PUT\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  }).then(response => {\n    if (!response.ok) {\n      throw new Error(`Error updating review: ${response.statusText}`);\n    }\n    return response.json();\n  });\n}\nexport function deleteReview(id) {\n  return fetch(`${baseUrl}/reviews/delete/${id}`, {\n    method: \"DELETE\"\n  }).then(response => {\n    if (!response.ok) {\n      throw new Error(`Error deleting review: ${response.statusText}`);\n    }\n  });\n}","map":{"version":3,"names":["baseUrl","process","env","REACT_APP_API_BASE_URL","fetchReviews","fetch","then","response","ok","Error","statusText","json","fetchReviewById","id","addReview","data","method","body","JSON","stringify","headers","updateReview","deleteReview"],"sources":["/Users/giselecasillas/my-app-v2/src/api.js"],"sourcesContent":["const baseUrl = process.env.REACT_APP_API_BASE_URL;\n\nexport function fetchReviews() {\n  return fetch(`${baseUrl}/reviews`).then((response) => {\n    if (!response.ok) {\n      throw new Error(`Error fetching reviews: ${response.statusText}`);\n    }\n    return response.json();\n  });\n}\n\nexport function fetchReviewById(id) {\n  return fetch(`${baseUrl}/reviews/${id}`).then((response) => {\n    if (!response.ok) {\n      throw new Error(`Error fetching review: ${response.statusText}`);\n    }\n    return response.json();\n  });\n}\n\nexport function addReview(data) {\n  return fetch(`${baseUrl}/reviews/create`, {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n  }).then((response) => {\n    if (!response.ok) {\n      throw new Error(`Error adding review: ${response.statusText}`);\n    }\n    return response.json();\n  });\n}\n\nexport function updateReview(id, data) {\n  return fetch(`${baseUrl}/reviews/update/${id}`, {\n    method: \"PUT\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n  }).then((response) => {\n    if (!response.ok) {\n      throw new Error(`Error updating review: ${response.statusText}`);\n    }\n    return response.json();\n  });\n}\n\nexport function deleteReview(id) {\n  return fetch(`${baseUrl}/reviews/delete/${id}`, {\n    method: \"DELETE\",\n  }).then((response) => {\n    if (!response.ok) {\n      throw new Error(`Error deleting review: ${response.statusText}`);\n    }\n  });\n}\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;AAElD,OAAO,SAASC,YAAYA,CAAA,EAAG;EAC7B,OAAOC,KAAK,CAAE,GAAEL,OAAQ,UAAS,CAAC,CAACM,IAAI,CAAEC,QAAQ,IAAK;IACpD,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAE,2BAA0BF,QAAQ,CAACG,UAAW,EAAC,CAAC;IACnE;IACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC;AACJ;AAEA,OAAO,SAASC,eAAeA,CAACC,EAAE,EAAE;EAClC,OAAOR,KAAK,CAAE,GAAEL,OAAQ,YAAWa,EAAG,EAAC,CAAC,CAACP,IAAI,CAAEC,QAAQ,IAAK;IAC1D,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAE,0BAAyBF,QAAQ,CAACG,UAAW,EAAC,CAAC;IAClE;IACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC;AACJ;AAEA,OAAO,SAASG,SAASA,CAACC,IAAI,EAAE;EAC9B,OAAOV,KAAK,CAAE,GAAEL,OAAQ,iBAAgB,EAAE;IACxCgB,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC;IAC1BK,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC,CAACd,IAAI,CAAEC,QAAQ,IAAK;IACpB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAE,wBAAuBF,QAAQ,CAACG,UAAW,EAAC,CAAC;IAChE;IACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC;AACJ;AAEA,OAAO,SAASU,YAAYA,CAACR,EAAE,EAAEE,IAAI,EAAE;EACrC,OAAOV,KAAK,CAAE,GAAEL,OAAQ,mBAAkBa,EAAG,EAAC,EAAE;IAC9CG,MAAM,EAAE,KAAK;IACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC;IAC1BK,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC,CAACd,IAAI,CAAEC,QAAQ,IAAK;IACpB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAE,0BAAyBF,QAAQ,CAACG,UAAW,EAAC,CAAC;IAClE;IACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC;AACJ;AAEA,OAAO,SAASW,YAAYA,CAACT,EAAE,EAAE;EAC/B,OAAOR,KAAK,CAAE,GAAEL,OAAQ,mBAAkBa,EAAG,EAAC,EAAE;IAC9CG,MAAM,EAAE;EACV,CAAC,CAAC,CAACV,IAAI,CAAEC,QAAQ,IAAK;IACpB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAE,0BAAyBF,QAAQ,CAACG,UAAW,EAAC,CAAC;IAClE;EACF,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}
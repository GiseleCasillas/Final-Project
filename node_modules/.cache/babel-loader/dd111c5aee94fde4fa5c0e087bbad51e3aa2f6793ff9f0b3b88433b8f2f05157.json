{"ast":null,"code":"var _jsxFileName = \"/Users/giselecasillas/my-app-v2/src/pages/MenuItemImage.js\",\n  _s = $RefreshSig$();\n// MenuItemImage.js\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport menuData from '.././db.json';\n\n// component only shows name & image\n// todo: style image so its not giant and make them all the same\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MenuItemImage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [menuItem, setMenuItem] = useState([]);\n  useEffect(() => {\n    setMenuItem(menuData.coffeeItems);\n  }, []);\n  const focusedItem = menuItem.find(item => item.id == id);\n\n  // todo: add bookmark button using this handler\n  const [isBookmarked, setIsBookmarked] = useState(false);\n  const handleBookmarkClick = () => {\n    setIsBookmarked(!isBookmarked);\n  };\n  if (!menuItem) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n  const {\n    name,\n    image\n  } = menuItem;\n  console.log('mica msg image', image);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menu-item-details\",\n    children: focusedItem && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: focusedItem.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: focusedItem.image,\n        alt: focusedItem.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(MenuItemImage, \"idipqdicdbWxwYyr8KpEp+vH5dU=\", false, function () {\n  return [useParams];\n});\n_c = MenuItemImage;\nexport default MenuItemImage;\nvar _c;\n$RefreshReg$(_c, \"MenuItemImage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","menuData","jsxDEV","_jsxDEV","Fragment","_Fragment","MenuItemImage","_s","id","menuItem","setMenuItem","coffeeItems","focusedItem","find","item","isBookmarked","setIsBookmarked","handleBookmarkClick","children","fileName","_jsxFileName","lineNumber","columnNumber","name","image","console","log","className","src","alt","_c","$RefreshReg$"],"sources":["/Users/giselecasillas/my-app-v2/src/pages/MenuItemImage.js"],"sourcesContent":["// MenuItemImage.js\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport menuData from '.././db.json'\n\n// component only shows name & image\n// todo: style image so its not giant and make them all the same\nconst MenuItemImage = () => {\n  const { id } = useParams();\n  \n  const [menuItem, setMenuItem] = useState([]);\n\n  useEffect(() => {\n    setMenuItem(menuData.coffeeItems);\n  }, []);\n\n  const focusedItem = menuItem.find((item) => item.id == id);\n\n\n  // todo: add bookmark button using this handler\n  const [isBookmarked, setIsBookmarked] = useState(false);\n\n  const handleBookmarkClick = () => {\n    setIsBookmarked(!isBookmarked);\n  };\n\n\n  if (!menuItem) {\n    return <div>Loading...</div>;\n  }\n\n  const { name, image } = menuItem;\n  console.log('mica msg image', image);\n\n  return (\n    <div className=\"menu-item-details\">\n      {focusedItem && (\n        <>\n          <h2>{focusedItem.name}</h2>\n          <img src={focusedItem.image} alt={focusedItem.name} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default MenuItemImage;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,QAAQ,MAAM,cAAc;;AAEnC;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC;EAAG,CAAC,GAAGR,SAAS,CAAC,CAAC;EAE1B,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdW,WAAW,CAACT,QAAQ,CAACU,WAAW,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,WAAW,GAAGH,QAAQ,CAACI,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACN,EAAE,IAAIA,EAAE,CAAC;;EAG1D;EACA,MAAM,CAACO,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMmB,mBAAmB,GAAGA,CAAA,KAAM;IAChCD,eAAe,CAAC,CAACD,YAAY,CAAC;EAChC,CAAC;EAGD,IAAI,CAACN,QAAQ,EAAE;IACb,oBAAON,OAAA;MAAAe,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,MAAM;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAGf,QAAQ;EAChCgB,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,KAAK,CAAC;EAEpC,oBACErB,OAAA;IAAKwB,SAAS,EAAC,mBAAmB;IAAAT,QAAA,EAC/BN,WAAW,iBACVT,OAAA,CAAAE,SAAA;MAAAa,QAAA,gBACEf,OAAA;QAAAe,QAAA,EAAKN,WAAW,CAACW;MAAI;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC3BnB,OAAA;QAAKyB,GAAG,EAAEhB,WAAW,CAACY,KAAM;QAACK,GAAG,EAAEjB,WAAW,CAACW;MAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eACtD;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACf,EAAA,CArCID,aAAa;EAAA,QACFN,SAAS;AAAA;AAAA8B,EAAA,GADpBxB,aAAa;AAuCnB,eAAeA,aAAa;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/giselecasillas/my-app-v2/src/pages/MenuItemImage.js\",\n  _s = $RefreshSig$();\n// MenuItemImage.js\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMenuItemById } from '.././api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MenuItemImage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [menuItem, setMenuItem] = useState(null);\n\n  // useEffect(() => {\n  //   // Fetch menu item details based on itemId (replace with your actual data fetching logic)\n  //   // This assumes you have a function to fetch a menu item by its ID\n  //   const fetchMenuItem = async () => {\n  //     try {\n  //       const response = await fetch(`/menu/${id}`); // Replace with your API endpoint\n  //       const data = await response.json();\n  //       setMenuItem(data);\n  //     } catch (error) {\n  //       console.error('Error fetching menu item:', error);\n  //     }\n  //   };\n\n  //   fetchMenuItem();\n  // }, [id]);\n\n  useEffect(() => {\n    const fetchMenuItem = async () => {\n      try {\n        const data = await fetchMenuItemById(itemId);\n        setMenuItem(data);\n      } catch (error) {\n        // Handle error\n      }\n    };\n    fetchMenuItem();\n  }, [itemId]);\n  if (!menuItem) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n  const {\n    name,\n    image\n  } = menuItem;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menu-item-image\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(MenuItemImage, \"lEdpV52WQy+ChHzxH1H+5k7nizo=\", false, function () {\n  return [useParams];\n});\n_c = MenuItemImage;\nexport default MenuItemImage;\nvar _c;\n$RefreshReg$(_c, \"MenuItemImage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","fetchMenuItemById","jsxDEV","_jsxDEV","MenuItemImage","_s","id","menuItem","setMenuItem","fetchMenuItem","data","itemId","error","children","fileName","_jsxFileName","lineNumber","columnNumber","name","image","className","src","alt","_c","$RefreshReg$"],"sources":["/Users/giselecasillas/my-app-v2/src/pages/MenuItemImage.js"],"sourcesContent":["// MenuItemImage.js\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMenuItemById } from '.././api';\n\nconst MenuItemImage = () => {\n  const { id } = useParams();\n  const [menuItem, setMenuItem] = useState(null);\n\n  // useEffect(() => {\n  //   // Fetch menu item details based on itemId (replace with your actual data fetching logic)\n  //   // This assumes you have a function to fetch a menu item by its ID\n  //   const fetchMenuItem = async () => {\n  //     try {\n  //       const response = await fetch(`/menu/${id}`); // Replace with your API endpoint\n  //       const data = await response.json();\n  //       setMenuItem(data);\n  //     } catch (error) {\n  //       console.error('Error fetching menu item:', error);\n  //     }\n  //   };\n\n  //   fetchMenuItem();\n  // }, [id]);\n\n  useEffect(() => {\n    const fetchMenuItem = async () => {\n      try {\n        const data = await fetchMenuItemById(itemId);\n        setMenuItem(data);\n      } catch (error) {\n        // Handle error\n      }\n    };\n\n    fetchMenuItem();\n  }, [itemId]);\n\n  if (!menuItem) {\n    return <div>Loading...</div>;\n  }\n\n  const { name, image } = menuItem;\n\n  return (\n    <div className=\"menu-item-image\">\n      <h2>{name}</h2>\n      <img src={image} alt={name} />\n    </div>\n  );\n};\n\nexport default MenuItemImage;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,iBAAiB,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;;EAE9C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMT,iBAAiB,CAACU,MAAM,CAAC;QAC5CH,WAAW,CAACE,IAAI,CAAC;MACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACd;MAAA;IAEJ,CAAC;IAEDH,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACE,MAAM,CAAC,CAAC;EAEZ,IAAI,CAACJ,QAAQ,EAAE;IACb,oBAAOJ,OAAA;MAAAU,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,MAAM;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAGZ,QAAQ;EAEhC,oBACEJ,OAAA;IAAKiB,SAAS,EAAC,iBAAiB;IAAAP,QAAA,gBAC9BV,OAAA;MAAAU,QAAA,EAAKK;IAAI;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACfd,OAAA;MAAKkB,GAAG,EAAEF,KAAM;MAACG,GAAG,EAAEJ;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEV,CAAC;AAACZ,EAAA,CA7CID,aAAa;EAAA,QACFJ,SAAS;AAAA;AAAAuB,EAAA,GADpBnB,aAAa;AA+CnB,eAAeA,aAAa;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
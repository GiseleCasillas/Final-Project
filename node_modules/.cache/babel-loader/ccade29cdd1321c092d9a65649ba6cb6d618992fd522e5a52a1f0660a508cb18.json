{"ast":null,"code":"var _jsxFileName = \"/Users/giselecasillas/my-app-v2/src/pages/ReviewForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./../ReviewForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReviewForm = ({\n  addReview\n}) => {\n  _s();\n  const [newReview, setNewReview] = useState({\n    author: \"\",\n    rating: 0,\n    content: \"\"\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Set the submission status to true\n    setIsSubmitting(true);\n\n    // Simulate an asynchronous submission process (you can replace this with your actual submission logic)\n    setTimeout(() => {\n      // Call the addReview function\n      addReview(newReview);\n\n      // Reset the form fields\n      setNewReview({\n        author: \"\",\n        rating: 0,\n        content: \"\"\n      });\n\n      // Set the submission status back to false\n      setIsSubmitting(false);\n    }, 1000); // Adjust the timeout based on your actual submission time\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Your Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newReview.author,\n        onChange: e => setNewReview({\n          ...newReview,\n          author: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Rating:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: newReview.rating,\n        min: \"1\",\n        max: \"10\",\n        onChange: e => setNewReview({\n          ...newReview,\n          rating: parseInt(e.target.value, 10)\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Comment:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newReview.content,\n        onChange: e => setNewReview({\n          ...newReview,\n          content: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: isSubmitting,\n      children: isSubmitting ? \"Pending Review...\" : \"Submit Review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(ReviewForm, \"mgTUnr+0EoURKF1iD92GXVWaFuI=\");\n_c = ReviewForm;\nexport default ReviewForm;\nvar _c;\n$RefreshReg$(_c, \"ReviewForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ReviewForm","addReview","_s","newReview","setNewReview","author","rating","content","isSubmitting","setIsSubmitting","handleSubmit","e","preventDefault","setTimeout","onSubmit","children","type","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","min","max","parseInt","disabled","_c","$RefreshReg$"],"sources":["/Users/giselecasillas/my-app-v2/src/pages/ReviewForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./../ReviewForm.css\";\n\nconst ReviewForm = ({ addReview }) => {\n  const [newReview, setNewReview] = useState({\n    author: \"\",\n    rating: 0,\n    content: \"\",\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Set the submission status to true\n    setIsSubmitting(true);\n\n    // Simulate an asynchronous submission process (you can replace this with your actual submission logic)\n    setTimeout(() => {\n      // Call the addReview function\n      addReview(newReview);\n\n      // Reset the form fields\n      setNewReview({\n        author: \"\",\n        rating: 0,\n        content: \"\",\n      });\n\n      // Set the submission status back to false\n      setIsSubmitting(false);\n    }, 1000); // Adjust the timeout based on your actual submission time\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Your Name:\n        <input\n          type=\"text\"\n          value={newReview.author}\n          onChange={(e) =>\n            setNewReview({ ...newReview, author: e.target.value })\n          }\n        />\n      </label>\n      <br />\n      <label>\n        Rating:\n        <input\n          type=\"number\"\n          value={newReview.rating}\n          min=\"1\"\n          max=\"10\"\n          onChange={(e) =>\n            setNewReview({ ...newReview, rating: parseInt(e.target.value, 10) })\n          }\n        />\n      </label>\n      <br />\n      <label>\n        Comment:\n        <textarea\n          value={newReview.content}\n          onChange={(e) =>\n            setNewReview({ ...newReview, content: e.target.value })\n          }\n        />\n      </label>\n      <br />\n      <button type=\"submit\" disabled={isSubmitting}>\n        {isSubmitting ? \"Pending Review...\" : \"Submit Review\"}\n      </button>\n    </form>\n  );\n};\n\nexport default ReviewForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
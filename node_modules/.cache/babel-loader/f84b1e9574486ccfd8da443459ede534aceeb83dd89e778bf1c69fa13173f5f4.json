{"ast":null,"code":"var _jsxFileName = \"/Users/giselecasillas/my-app-v2/src/pages/ReviewPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport ReviewBox from \"./ReviewBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReviewPage = () => {\n  _s();\n  const [reviews, setReviews] = useState([]);\n  const [newReview, setNewReview] = useState({\n    author: \"\",\n    rating: 0,\n    content: \"\"\n  });\n  const loadReviews = () => {\n    fetch(\"/api/reviews\").then(response => response.json()).then(data => setReviews(data)).catch(error => console.error(\"Error fetching reviews:\", error));\n  };\n  useEffect(() => {\n    // Load reviews when the component mounts\n    loadReviews();\n  }, []);\n\n  //   const loadReviews = () => {\n  //     // GET request to fetch all reviews\n  //     axios\n  //       .get(\"/api/reviews\")\n  //       .then((response) => {\n  //         setReviews(response.data);\n  //       })\n  //       .catch((error) => {\n  //         console.error(\"Error fetching reviews:\", error);\n  //       });\n  //   };\n\n  const addReview = () => {\n    // POST request to create a new review\n    axios.post(\"/api/reviews\", newReview).then(response => {\n      // Update the reviews state with the new review\n      setReviews([...reviews, response.data]);\n\n      // Clear the form fields\n      setNewReview({\n        // Reset form fields\n      });\n    }).catch(error => {\n      console.error(\"Error adding review:\", error);\n    });\n  };\n  const updateReview = (id, updatedReview) => {\n    // PUT request to update a specific review by ID\n    axios.put(`/api/reviews/${id}`, updatedReview).then(response => {\n      // Update the reviews state with the updated review\n      setReviews(reviews.map(review => review.id === id ? response.data : review));\n    }).catch(error => {\n      console.error(\"Error updating review:\", error);\n    });\n  };\n  const deleteReview = id => {\n    // DELETE request to delete a specific review by ID\n    axios.delete(`/api/reviews/${id}`).then(() => {\n      // Update the reviews state by removing the deleted review\n      setReviews(reviews.filter(review => review.id !== id));\n    }).catch(error => {\n      console.error(\"Error deleting review:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reviews\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: reviews.map(review => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(ReviewBox, {\n          author: review.author,\n          rating: review.rating,\n          content: review.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateReview(review.id, {\n            content: \"Updated Content\"\n          }),\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteReview(review.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, review.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add a Review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addReview,\n        children: \"Submit Review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(ReviewPage, \"Ldouzdyf1VooJ+lNh56bKkU4U38=\");\n_c = ReviewPage;\nexport default ReviewPage;\nvar _c;\n$RefreshReg$(_c, \"ReviewPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","ReviewBox","jsxDEV","_jsxDEV","ReviewPage","_s","reviews","setReviews","newReview","setNewReview","author","rating","content","loadReviews","fetch","then","response","json","data","catch","error","console","addReview","post","updateReview","id","updatedReview","put","map","review","deleteReview","delete","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/giselecasillas/my-app-v2/src/pages/ReviewPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport ReviewBox from \"./ReviewBox\";\n\nconst ReviewPage = () => {\n  const [reviews, setReviews] = useState([]);\n  const [newReview, setNewReview] = useState({\n    author: \"\",\n    rating: 0,\n    content: \"\",\n  });\n\n  const loadReviews = () => {\n    fetch(\"/api/reviews\")\n      .then((response) => response.json())\n      .then((data) => setReviews(data))\n      .catch((error) => console.error(\"Error fetching reviews:\", error));\n  };\n\n  useEffect(() => {\n    // Load reviews when the component mounts\n    loadReviews();\n  }, []);\n\n  //   const loadReviews = () => {\n  //     // GET request to fetch all reviews\n  //     axios\n  //       .get(\"/api/reviews\")\n  //       .then((response) => {\n  //         setReviews(response.data);\n  //       })\n  //       .catch((error) => {\n  //         console.error(\"Error fetching reviews:\", error);\n  //       });\n  //   };\n\n  const addReview = () => {\n    // POST request to create a new review\n    axios\n      .post(\"/api/reviews\", newReview)\n      .then((response) => {\n        // Update the reviews state with the new review\n        setReviews([...reviews, response.data]);\n\n        // Clear the form fields\n        setNewReview({\n          // Reset form fields\n        });\n      })\n      .catch((error) => {\n        console.error(\"Error adding review:\", error);\n      });\n  };\n\n  const updateReview = (id, updatedReview) => {\n    // PUT request to update a specific review by ID\n    axios\n      .put(`/api/reviews/${id}`, updatedReview)\n      .then((response) => {\n        // Update the reviews state with the updated review\n        setReviews(\n          reviews.map((review) => (review.id === id ? response.data : review)),\n        );\n      })\n      .catch((error) => {\n        console.error(\"Error updating review:\", error);\n      });\n  };\n\n  const deleteReview = (id) => {\n    // DELETE request to delete a specific review by ID\n    axios\n      .delete(`/api/reviews/${id}`)\n      .then(() => {\n        // Update the reviews state by removing the deleted review\n        setReviews(reviews.filter((review) => review.id !== id));\n      })\n      .catch((error) => {\n        console.error(\"Error deleting review:\", error);\n      });\n  };\n\n  return (\n    <div>\n      <h1>Reviews</h1>\n      <ul>\n        {reviews.map((review) => (\n          <li key={review.id}>\n            {/* Use the ReviewBox component to display each review */}\n            <ReviewBox\n              author={review.author}\n              rating={review.rating}\n              content={review.content}\n            />\n\n            {/* Button to update a review */}\n            <button\n              onClick={() =>\n                updateReview(review.id, { content: \"Updated Content\" })\n              }\n            >\n              Update\n            </button>\n\n            {/* Button to delete a review */}\n            <button onClick={() => deleteReview(review.id)}>Delete</button>\n          </li>\n        ))}\n      </ul>\n      {/* Form to add a new review */}\n      <div>\n        <h2>Add a Review</h2>\n        {/* Form fields for creating a new review */}\n        <button onClick={addReview}>Submit Review</button>\n      </div>\n    </div>\n  );\n};\n\nexport default ReviewPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}